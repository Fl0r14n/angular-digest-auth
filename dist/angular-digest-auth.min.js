/**
 * AngularJS module to manage HTTP Digest Authentication
 * @version v0.1.0 - 2014-01-14
 * @link https://github.com/mgonto/angular-digest-auth
 * @author Matteo Tafani Alunno <matteo.tafanialunno@gmail.com>
 * @license MIT License, http://www.opensource.org/licenses/MIT
 */
"use strict";var dgAuth=angular.module("dgAuth",["angular-md5","ngCookies"]);dgAuth.config(["$httpProvider",function(a){a.interceptors.push(["$rootScope","$q","$authConfig",function(a,b,c){return{request:function(d){return a.$broadcast(c.getEvent("process.request"),d),d||b.when(d)},responseError:function(d){if(401===d.status){if(a.$broadcast(c.getEvent("process.response"),d),d.login)return b.reject(d);var e=d.headers(c.getHeader());if(null==e)return a.$broadcast(c.getEvent("authentication.notFound")),b.reject(d);var f=b.defer(),g={config:d.config,deferred:f};return a.$broadcast(c.getEvent("authentication.header"),e,g),a.$broadcast(c.getEvent("signin.required")),f.promise}return b.reject(d)}}}])}]),dgAuth.run(["$rootScope","$authConfig","$authService","$serverAuth","$http",function(a,b,c,d,e){a.requests401=[];var f=function(){for(var b=0;b<a.requests401.length;b++){var c=a.requests401[b];e(c.config).then(function(a){c.deferred.resolve(a)},function(a){c.deferred.reject(a)})}};a.$on(b.getEvent("process.request"),function(a,b){c.processRequest(b)}),a.$on(b.getEvent("process.response"),function(a,b){c.isRequested()&&(b.login=!0)}),a.$on(b.getEvent("authentication.header"),function(b,c,e){a.requests401.push(e),d.parseHeader(c)}),a.$on(b.getEvent("signin.required"),function(a){c.restoreCredential()&&(a.preventDefault(),f())}),a.$on(b.getEvent("credential.submitted"),function(){f()})}]),dgAuth.factory("$clientAuth",["$rootScope","$serverAuth","md5",function(a,b,c){function d(){var a="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789",d=0,e=function(b){for(var c=[],d=a.length,e=0;b>e;++e)c.push(a[Math.random()*d|0]);return c.join("")},f=function(){d++;for(var a=8-d.toString().length,b="",c=0;a>c;c++)b+="0";return b+d},g=function(a,d,e,f,g,h){var i=c.createHash(a+":"+b.realm+":"+d),j=c.createHash(e+":"+f);return c.createHash(i+":"+b.nonce+":"+g+":"+h+":"+b.qop+":"+j)},h=function(a,c,d,h){var i=f(),j=e(16);return'Digest username="'+a+'", realm="'+b.realm+'", nonce="'+b.nonce+'", uri="'+h+'", algorithm='+b.algorithm+', response="'+g(a,c,d,h,i,j)+'", opaque="'+b.opaque+'", qop='+b.qop+', nc="'+i+'", cnonce="'+j+'"'};this.isConfigured=function(){return b.hasHeader()},this.processRequest=function(a,c,d){d.url.indexOf(b.domain)>=0&&(d.headers.Authorization=h(a,c,d.method,d.url))}}return new d}]),dgAuth.provider("$authConfig",function(){function a(a,b,c){var d=a,e=b,f=c;this.getSign=function(){return d},this.getEvents=function(){return e},this.getEvent=function(a){var b=a.split(".");return e[b[0]][b[1]]},this.getHeader=function(){return f}}var b={signin:"",signout:"",config:{}},c={authentication:{header:"$authAuthenticationHeader"},process:{request:"$authProcessRequest",response:"$authProcessResponse"},signin:{successful:"$authSigninSuccessful",error:"$authSigninError",required:"$authSigninRequired"},signout:{successful:"$authSignoutSuccessful",error:"$authSignoutError"},credential:{submitted:"$authCredentialSubmitted",stored:"$authCredentialStored",restored:"$authCredentialRestored"}},d="";this.setSign=function(a){angular.extend(b,a)},this.setEvents=function(a){angular.extend(c,a)},this.setHeader=function(a){d=a},this.$get=function(){return new a(b,c,d)}}),dgAuth.factory("$serverAuth",["$authStorage",function(a){function b(){var b=/([a-zA-Z]+)=\"?([a-zA-Z0-9\/\s]+)\"?/,c=!1;this.realm="",this.domain="",this.nonce="",this.opaque="",this.algorithm="",this.qop="",this.hasHeader=function(){return c},this.config=function(a){this.realm=a.realm,this.domain=a.domain,this.nonce=a.nonce,this.opaque=a.opaque,this.algorithm=a.algorithm,this.qop=a.qop,c=!0},this.parseHeader=function(d){for(var e=d.split(", "),f=0;f<e.length;f++){var g=b.exec(e[f]);this[g[1]]=g[2]}c=!0,a.setServerAuth(this)}}var c=function(){var c=new b;return a.hasServerAuth()&&c.config(a.getServerAuth()),c};return c()}]),dgAuth.factory("$authService",["$authConfig","$authStorage","$clientAuth","$rootScope","$http","$cookies","md5",function(a,b,c,d,e,f,g){function h(){var h,i={username:"",password:"",requested:!1};this.hasIdentity=function(){return null!==h},this.getIdentity=function(){return h},this.setRequest=function(b,c){i={username:b,password:c,requested:!0},d.$broadcast(a.getEvent("credential.submitted"),{username:i.username,password:i.password,requested:i.requested})},this.getRequest=function(){return i},this.isRequested=function(){return i.requested},this.isAuthenticated=function(){return f._auth==g.createHash("true")&&null!==h},this.restoreCredential=function(){return b.hasCredential()&&c.isConfigured()?(i.username=b.getUsername(),i.password=b.getPassword(),!0):!1},this.processRequest=function(a){c.isConfigured()&&c.processRequest(i.username,i.password,a)},this.signin=function(){e.post(a.getSign().signin,a.getSign().config).success(function(c){h=angular.extend({username:i.username},c),f._auth=g.createHash("true"),i.requested&&(b.setCredential(i.username,i.password),d.$broadcast(a.getEvent("credential.stored"),{username:i.username,password:i.password}),i.requested=!1),d.$broadcast(a.getEvent("signin.successful"),c)}).error(function(b,c){i=null,d.$broadcast(a.getEvent("signin.error"),b,c)})},this.signout=function(){e.post(a.getSign().signout,a.getSign().config).success(function(b){f._auth=g.createHash("false"),h=null,d.$broadcast(a.getEvent("signout.successful"),b)}).error(function(b,c){d.$broadcast(a.getEvent("signout.error"),b,c)})}}return new h}]),dgAuth.provider("$authStorage",function(){function a(a){var b=a;this.hasCredential=function(){var a=b.getItem("username"),c=b.getItem("password");return null!==a&&null!==c},this.setCredential=function(a,c){b.setItem("username",a),b.setItem("password",c)},this.hasServerAuth=function(){return null!==sessionStorage.getItem("server")},this.setServerAuth=function(a){sessionStorage.setItem("server",JSON.stringify(a))},this.getServerAuth=function(){return JSON.parse(sessionStorage.getItem("server"))},this.getUsername=function(){return b.getItem("username")},this.getPassword=function(){return b.getItem("password")},this.clear=function(){b.clear(),sessionStorage.clear()}}var b=sessionStorage;this.setStorage=function(a){b=a},this.$get=function(){return new a(b)}});